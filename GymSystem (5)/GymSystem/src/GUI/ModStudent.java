package GUI;

import java.awt.Dimension;
import java.awt.Toolkit;
import Logic.*;
import javax.swing.JOptionPane;
import Logic.GymSystem.*;
import static Logic.GymSystem.memberList;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

public class ModStudent extends javax.swing.JFrame {

    /**
     * Creates new form ModMStaff
     */
    public ModStudent() {
        initComponents();
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        pnTitle1 = new javax.swing.JPanel();
        jButton15 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        pan = new java.awt.Panel();
        jLabel24 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtLast = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        f = new javax.swing.JRadioButton();
        m = new javax.swing.JRadioButton();
        jLabel27 = new javax.swing.JLabel();
        txtCourse = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        Jday = new javax.swing.JComboBox<>();
        JCmonth = new javax.swing.JComboBox<>();
        JCyear = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        txtphone = new javax.swing.JTextField();
        Delete = new javax.swing.JButton();
        Modify = new javax.swing.JButton();
        txtAddress = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtTeam = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(241, 247, 251));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 600));

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(21, 50, 112));
        jLabel4.setText("Modify/Delete Student Member");

        txtId.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        txtId.setForeground(new java.awt.Color(21, 50, 112));
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        Search.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        Search.setForeground(new java.awt.Color(21, 50, 112));
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(21, 50, 112));
        jLabel12.setText("Member ID:");

        pnTitle1.setBackground(new java.awt.Color(205, 228, 242));
        pnTitle1.setPreferredSize(new java.awt.Dimension(950, 110));

        jButton15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/BackBtn.png"))); // NOI18N
        jButton15.setBorderPainted(false);
        jButton15.setContentAreaFilled(false);
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 36)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(21, 50, 112));
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/polytechnic Gym System.png"))); // NOI18N
        jLabel22.setPreferredSize(new java.awt.Dimension(1353, 135));

        javax.swing.GroupLayout pnTitle1Layout = new javax.swing.GroupLayout(pnTitle1);
        pnTitle1.setLayout(pnTitle1Layout);
        pnTitle1Layout.setHorizontalGroup(
            pnTitle1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTitle1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton15)
                .addContainerGap())
        );
        pnTitle1Layout.setVerticalGroup(
            pnTitle1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTitle1Layout.createSequentialGroup()
                .addGroup(pnTitle1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnTitle1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnTitle1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jButton15)))
                .addGap(79, 79, 79))
        );

        pan.setBackground(new java.awt.Color(205, 228, 242));
        pan.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 14)); // NOI18N
        pan.setPreferredSize(new java.awt.Dimension(850, 350));

        jLabel24.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(21, 50, 112));
        jLabel24.setText("Address:");

        txtName.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N

        jLabel25.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(21, 50, 112));
        jLabel25.setText("Surname:");

        txtLast.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N

        jLabel26.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(21, 50, 112));
        jLabel26.setText("Gender:");

        buttonGroup1.add(f);
        f.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        f.setForeground(new java.awt.Color(21, 50, 112));
        f.setText("Female");
        f.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fActionPerformed(evt);
            }
        });

        buttonGroup1.add(m);
        m.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        m.setForeground(new java.awt.Color(21, 50, 112));
        m.setText("Male");
        m.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(21, 50, 112));
        jLabel27.setText("Course Name:");

        txtCourse.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N

        jLabel29.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(21, 50, 112));
        jLabel29.setText("Date of Birth:");

        Jday.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        Jday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        JCmonth.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        JCmonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "January", "February", "March", "April", "May ", "June", "July", "August", "September", "October", "November", "December" }));

        JCyear.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        JCyear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006" }));
        JCyear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCyearActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(21, 50, 112));
        jLabel30.setText("Phone number:");

        txtphone.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N

        Delete.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        Delete.setForeground(new java.awt.Color(21, 50, 112));
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Modify.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        Modify.setForeground(new java.awt.Color(21, 50, 112));
        Modify.setText("Modify");
        Modify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModifyActionPerformed(evt);
            }
        });

        txtAddress.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(21, 50, 112));
        jLabel28.setText("First Name:");

        txtTeam.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        txtTeam.setForeground(new java.awt.Color(21, 50, 112));
        txtTeam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeamActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 15)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(21, 50, 112));
        jLabel33.setText("Sport Team:");

        javax.swing.GroupLayout panLayout = new javax.swing.GroupLayout(pan);
        pan.setLayout(panLayout);
        panLayout.setHorizontalGroup(
            panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panLayout.createSequentialGroup()
                .addGroup(panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panLayout.createSequentialGroup()
                        .addGap(366, 366, 366)
                        .addComponent(Modify)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Delete))
                    .addGroup(panLayout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addGroup(panLayout.createSequentialGroup()
                                .addComponent(f)
                                .addGap(37, 37, 37)
                                .addComponent(m))
                            .addComponent(txtLast, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel26)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28)
                            .addComponent(jLabel27))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(txtTeam, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30)
                    .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panLayout.createSequentialGroup()
                        .addComponent(Jday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JCmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JCyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel24)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110))
        );
        panLayout.setVerticalGroup(
            panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panLayout.createSequentialGroup()
                .addGap(316, 316, 316)
                .addGroup(panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Modify)
                    .addComponent(Delete))
                .addContainerGap(8, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panLayout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTeam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Jday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JCmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JCyear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel30)
                        .addGap(18, 18, 18)
                        .addComponent(txtphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panLayout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addGap(18, 18, 18)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(f)
                            .addComponent(m))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(64, 64, 64))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Search)))
                        .addGap(52, 52, 52)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(pan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Search))
                    .addComponent(jLabel11))
                .addGap(30, 30, 30)
                .addComponent(pan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:

        try {
            int id = Integer.parseInt(txtId.getText());
            boolean found = false;
            for (Member member : GymSystem.memberList) {
                if (member.getMembershipId() == id) {
                    if (member instanceof Student) {
                        // Do something with the found student

                        txtName.setText(member.getFirstName());
                        txtLast.setText(member.getSurname());
                        txtCourse.setText(((Student) member).getCourse());
                        txtAddress.setText(member.getAddress());
                        txtphone.setText(String.valueOf(member.getPhone()));
                        txtTeam.setText(((Student) member).getTeam());

                    } else {
                        JOptionPane.showMessageDialog(null, "Member found, but not a student");
                    }
                    found = true;
                    break;
                }
            }
            if (!found) {
                JOptionPane.showMessageDialog(null, "Member not found");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "An error occurred: " + ex.getMessage());
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new ModifyMem().setVisible(true);
    }//GEN-LAST:event_jButton15ActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    private void ModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModifyActionPerformed
        try {
            int id = Integer.parseInt(txtId.getText());
            boolean found = false;
            for (Member member : GymSystem.memberList) {
                if (member.getMembershipId() == id) {
                    if (member instanceof Student) {
                        Student student = (Student) member; // Cast Member to Student

                        String name;
                        String Lname;
                        try {
                            name = txtName.getText();
                            if (name.length() < 2) {
                                JOptionPane.showMessageDialog(null, "Please enter a name with at least two letters.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                                return; // Stop further execution if an exception occurs
                            }
                        } catch (NullPointerException e) {
                            // Handle the exception when `txtName` is null
                            JOptionPane.showMessageDialog(null, "Please enter a name.", "Missing Input", JOptionPane.ERROR_MESSAGE);
                            return; // Stop further execution if an exception occurs
                        }

                        try {
                            Lname = txtLast.getText();
                            if (Lname.length() < 2) {
                                JOptionPane.showMessageDialog(null, "Please enter a last name with at least two letters.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                                return; // Stop further execution if an exception occurs
                            }
                        } catch (NullPointerException e) {
                            // Handle the exception when `txtLast` is null
                            JOptionPane.showMessageDialog(null, "Please enter a last name.", "Missing Input", JOptionPane.ERROR_MESSAGE);
                            return; // Stop further execution if an exception occurs
                        }
                        student.setFirstName(name);
                        student.setSurname(Lname);

                        // Set gender
                        String gender = "";
                        if (f.isSelected()) {
                            gender = "Female";
                        } else if (m.isSelected()) {
                            gender = "Male";
                        }
                        student.setGender(gender);

                        // Set address
                        try {
                            String address = txtAddress.getText();
                            if (address.length() < 4) {
                                JOptionPane.showMessageDialog(null, "Please enter an address with at least four letters.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                                return; // Stop further execution if an exception occurs
                            }
                            student.setAddress(address);
                        } catch (NullPointerException ex) {
                            JOptionPane.showMessageDialog(null, "Please enter an address.", "Missing Input", JOptionPane.ERROR_MESSAGE);
                            return; // Stop further execution if an exception occurs
                        }

                        // Set sport team
                        String team;
                        try {
                            team = txtTeam.getText();
                            if (team.length() < 2) {
                                JOptionPane.showMessageDialog(null, "Please select a team.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                                return; // Stop further execution if an exception occurs
                            }
                        } catch (NullPointerException e) {
                            // Handle the exception when `JCteam` is null
                            JOptionPane.showMessageDialog(null, "Please select a team.", "Missing Input", JOptionPane.ERROR_MESSAGE);
                            return; // Stop further execution if an exception occurs
                        }
                        // Set sport team
                        student.setTeam(team);
                        String course;
                        try {
                            course = txtCourse.getText();
                            if (course.length() == 0) {
                                JOptionPane.showMessageDialog(null, "Please enter a course.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                                return; // Stop further execution if an exception occurs
                            }
                        } catch (NullPointerException e) {
                            // Handle the exception when `txtCourse` is null
                            JOptionPane.showMessageDialog(null, "Please enter a course.", "Missing Input", JOptionPane.ERROR_MESSAGE);
                            return; // Stop further execution if an exception occurs
                        }
                        student.setCourse(course);

                        // Set date
                        String day = (String) Jday.getSelectedItem();
                        String month = (String) JCmonth.getSelectedItem();
                        String year = (String) JCyear.getSelectedItem();
                        if (day == "Day" || month == "Month" || year == "Year" || day.isEmpty() || month.isEmpty() || year.isEmpty()) {
                            JOptionPane.showMessageDialog(null, "Please select a valid date.", "Missing Input", JOptionPane.ERROR_MESSAGE);
                            return; // Stop further execution if an exception occurs
                        }
                        String date = day + month + year;
                        student.setDateOfBirth(date);

                        // Set phone number
                        try {
                            int phone = Integer.parseInt(txtphone.getText());
                            student.setPhone(phone);
                        } catch (NumberFormatException ex) {
                            JOptionPane.showMessageDialog(null, "Invalid phone number format.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                            return; // Stop further execution if an exception occurs
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "Member found, but not a student");
                    }
                    found = true;
                    break;
                }
            }
            if (!found) {
                JOptionPane.showMessageDialog(null, "Member not found");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "An error occurred: " + ex.getMessage());
        }
        JOptionPane.showMessageDialog(null, "Member modified successfully.", "Modification Complete", JOptionPane.PLAIN_MESSAGE);

        System.out.println(memberList);

    }//GEN-LAST:event_ModifyActionPerformed

    private void JCyearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCyearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCyearActionPerformed

    private void fActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        // TODO add your handling code here:
        try {
            int id = Integer.parseInt(txtId.getText());
            boolean found = false;
            Member memberToRemove = null;
            for (Member member : memberList) {
                if (member.getMembershipId() == id) {
                    if (member instanceof Student) {
                        // Remove the member from the member list
                        memberToRemove = member;
                        found = true;
                        break;
                    } else {
                        JOptionPane.showMessageDialog(null, "Member found, but not a student");
                        return;
                    }
                }
            }
            if (!found) {
                JOptionPane.showMessageDialog(null, "Member not found");
                return;
            }

            // Remove the member from any trainer's trainee list in the employeeList
            for (Employee employee : GymSystem.employeeList) {
                if (employee instanceof Trainer) {
                    Trainer trainer = (Trainer) employee;
                    if (trainer.hasTrainee(memberToRemove)) {
                        trainer.removeMember(memberToRemove);
                    }
                }
            }

            memberList.remove(memberToRemove);
            JOptionPane.showMessageDialog(null, "Member deleted");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "An error occurred: " + ex.getMessage());
        }
        System.out.println("Done !");
        for (Member student : memberList) {
            System.out.println(student.toString());
        }
        JOptionPane.showMessageDialog(null, "Member Deleted successfully.", "Modification Complete", JOptionPane.PLAIN_MESSAGE);
    }//GEN-LAST:event_DeleteActionPerformed

    private void txtTeamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTeamActionPerformed

    private void mActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModStudent().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JComboBox<String> JCmonth;
    private javax.swing.JComboBox<String> JCyear;
    private javax.swing.JComboBox<String> Jday;
    private javax.swing.JButton Modify;
    private javax.swing.JButton Search;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton f;
    private javax.swing.JButton jButton15;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton m;
    private java.awt.Panel pan;
    private javax.swing.JPanel pnTitle1;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCourse;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLast;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtTeam;
    private javax.swing.JTextField txtphone;
    // End of variables declaration//GEN-END:variables

}
